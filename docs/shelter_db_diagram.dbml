
Project UNHCR_shelter_sustainability {
  Note: '''
    # DBML - Database Markup Language
    DBML (database markup language) is a simple, readable DSL language designed to define database structures.
    ## Doc
    * //// https://www.dbml.org/docs/
    ## Benefits
    
    * It is simple, flexible and highly human-readable
    * It is database agnostic, focusing on the essential database structure definition without worrying about the detailed syntaxes of each database
    * Comes with a free, simple database visualiser at [dbdiagram.io](http://dbdiagram.io)
  '''
}

// Enum organisation {
//   unhcr [note: 'united nation high commitee refugee']
//   who [note: 'world health organisation']
//   wpf [note: 'world food program']
// }
Table organisations {
  full_name varchar
  name varchar [pk, unique, note: 'acronym']
}
// Indexes

// Creating tables
Table users as U {
  id int [pk, increment] // auto-increment
  email varchar [note: 'confirm email address']
  password varchar [note: 'Allow simple password']
  name varchar
  organisation_name organisation [ref: > organisations.name]
  created_at timestamp
}

Table countries {
  code int [pk]
  name varchar
  continent_name varchar
 }

Enum shelter_lifespan {
  "6 months or less"
  "1 year"
  "2 years"
  "3 years"
  "4 years"
  "5 years"
  "6 years"
  "7 years"
  "8 years"
  "9 years"
  "10 years"
}
Enum risk {
  Low
  Medium
  High
}
Table projects as P {
  id int [pk, increment]
  // description
  name varchar
  organisation_name organisation [ref: > organisations.name, note: 'pre-filled with user info']
  shelter_total int [note: 'total number of shelters per site']
  shelter_occupants int [note: 'people per household > 0 and <= 10']
  shelter_lifespan shelter_lifespan [note: 'between 0.5 year and 10 years']
  setup_people int  [note: 'people necessary for setup >0 and <=10']
  setup_time int [note: 'setup time in days >0 and <=10']
  location_name varchar [note: 'city name']
  country_code varchar [ref: > countries.code]
  location_distance_from_capital int [note: 'distance in km from capital city of country'] 
  location_lat int
  location_lon int
  risk_flood risk
  risk_seismic risk
  created_at datetime [default: `now()`]
  created_by U [ref: > users.id]
  shelter_id int [ref: - shelters.id]
  // material[]
  // labour[]
  // environmental performance [note: 'computed']
  // technical performance
  // habitability
  // affordability
  // sustainability_score_card
}


//// shelter definition
Enum shelter_type {
  Gable_roof_high_walls [note: 'high walls']
  Gable_roof_low_walls [note: 'low walls']
  Flat_roof
  Dome
}

Table shelters {
  id int [pk, increment]
  type shelter_type
  length int
  width int
  roof_height int
  wall_1_height int
  wall_2_height int
}
Table doors {
  id int [
    pk,
    unique,
    note: 'maybe we can reuse doors dimension'
  ]
  shelter_id int [ref: > shelters.id]
  door_width int
  door_height int
}

Table windows {
  id int [
    pk,
    unique,
    note: 'maybe we can reuse windows'
  ]
  height int
  width int
  still_height int
  shelter_id int [ref: > shelters.id]
}

// Table shelter_windows {
// id int [pk, unique]
// shelter_id int [ref: > shelters.id]
// window_id int [ref: > windows.id]
// number  int
// }

// Material definition
Enum material_form {
  "Aerated/lightweight block"
  "Block"
  "Brick, fired"
  "Brick, unfired"
  "Canvas, polycotton"
  "Composite panel (polystyrene core)"
  "Earth roof"
  "General"
  "Gravel, aggregate"
  "Hardwood - rectangular section"
  "Hardwood - round section"
  "HDPE, polyethylene"
  "Heavy - sheet, tarpaulin, tent (e.g. SFT outer)"
  "Hinge, lock"
  "LDPE, polyethylene"
  "Light - sheet, tent (e.g. SFT inner)"
  "Mortar"
  "Nails, screws, bolts, other fixings"
  "Natural"
  "Nylon"
  "Plaster"
  "Plastic, polyester"
  "Plywood, chipboard, fibreboard"
  "Pole"
  "Polycarbonate, PC sheet - flat"
  "Polycarbonate, PC sheet - profile"
  "Polyester"
  "Polystyrene - sheet"
  "Polyvinyl chloride, PVC pipe"
  "Precast, block"
  "Precast, other unit"
  "Profile"
  "Pure cement powder"
  "Rammed earth"
  "Rebar"
  "Reinforced"
  "Rod, wire"
  "Rope"
  "Sheet"
  "Sheet - corrugated"
  "Sheet - flat"
  "Sheet - other profile"
  "Sheet, pane"
  "Softwood - rectangular section"
  "Softwood - round section"
  "Strap"
  "Structural section - C section"
  "Structural section - hollow tube - round"
  "Structural section - hollow tube - square"
  "Structural section - I section"
  "Structural section - L section"
  "Structural section - T section"
  "Structural section - Z section"
  "Synthetic, polyester, nylon"
  "Tile, fired"
  "Wool, mineral wool,  insulation"
  "Woven mat"
}

Enum material_types {
  "Aluminium"
  "Bamboo"
  "Bitumen"
  "Cardboard, paper"
  "Cement"
  "Clay"
  "Concrete"
  "Cotton, Canvas, Polycotton"
  "Glass"
  "Grass, straw"
  "Lime"
  "Metal fixture, fixing"
  "Plaster, gypsum"
  "Plastic"
  "Preservative, timber preservative"
  "Rope"
  "Rubber"
  "Sand"
  "Soil, earth, clay, mud"
  "Steel"
}
Table materials {
  id int [pk, unique]
  shelter_id int [ref: > shelters.id]
  name varchar [note: 'used for display']
  source int [ref: > countries.code]
  material material_types [note: 'each material_type have a subset of material form, we should probably model that']
  form material_form [note: 'should have one sketch/image associated with each form', note: 'subset defined by materials']
  unit unit_type [note: 'piece (one, two pieces), m2, m3, kg', note: 'defined by form']
  quantity int
  unit_cost int [note: 'dollar']
  total_cost int [note: 'should probably be only displayed in frontend']
  // length, width, (depth|height), diameter, thickness (depends on the form)
}
// // Many to many relationship between shelter and material
// Table shelter_materials {
//   id int [pk, unique]
//   shelter_id int [ref: > shelters.id]
//   material_id int [ref: > materials.id]
// }
